version: '3.8'

services:
  db:
    image: postgres:15
    container_name: trading_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: trading_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: trading_redis
    restart: always
    ports:
      - "6379:6379"

  web:
    build: .
    container_name: trading_flask
    restart: always
    depends_on:
      - db
      - redis
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/trading_db
      REDIS_URL: redis://redis:6379/0
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DB_HOST: db

  worker:
    build: .
    container_name: trading_celery_worker
    restart: always
    depends_on:
      - web
      - redis
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/trading_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    command: ["celery", "-A", "trading_service.server.celery", "worker", "--loglevel=info"]

  beat:
    build: .
    container_name: trading_celery_beat
    restart: always
    depends_on:
      - worker
      - redis
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/trading_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    command: ["celery", "-A", "trading_service.server.celery", "beat", "--loglevel=info"]

volumes:
  postgres_data:
